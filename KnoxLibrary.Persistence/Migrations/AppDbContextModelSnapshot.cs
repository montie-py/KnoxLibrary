// <auto-generated />
using KnoxLibrary.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KnoxLibrary.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("KnoxLibrary.Persistence.Entities.Entry", b =>
                {
                    b.Property<string>("CatalogueLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Arranger")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LiturgicalSeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Voices")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CatalogueLocation");

                    b.HasIndex("GenreId");

                    b.HasIndex("LiturgicalSeasonId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("KnoxLibrary.Persistence.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("KnoxLibrary.Persistence.Entities.LiturgicalSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LiturgicalSeasons");
                });

            modelBuilder.Entity("KnoxLibrary.Persistence.Entities.Entry", b =>
                {
                    b.HasOne("KnoxLibrary.Persistence.Entities.Genre", "Genre")
                        .WithMany("Entries")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KnoxLibrary.Persistence.Entities.LiturgicalSeason", "LiturgicalSeason")
                        .WithMany("Entries")
                        .HasForeignKey("LiturgicalSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("LiturgicalSeason");
                });

            modelBuilder.Entity("KnoxLibrary.Persistence.Entities.Genre", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("KnoxLibrary.Persistence.Entities.LiturgicalSeason", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
